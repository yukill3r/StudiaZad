to prostokat :sizea :sizeb
	repeat 2 [fd :sizea rt 90 fd :sizeb rt 90]
end

to stars :steps :size
	repeat :steps [fd :size rt 90 fd :size lt 90]
end

to tk :size
	wielokat :size 4

	fd :size rt 90 fd :size lt 180
	wielokat :size 3
	lt 90 fd :size rt 90 fd :size/5*3 rt 90
	prostokat :size/2 :size/5
	lt 90 fd :size/5*2 rt 90
end

to wielokat :size :katy
	repeat :katy [fd :size rt 360/:katy]
end

to wioska :wielkosc :ilosc :dystans
	repeat :ilosc [tk :wielkosc/REPCOUNT
	pu rt 90 fd :dystans+:wielkosc/REPCOUNT lt 90 fd :wielkosc/5*1/REPCOUNT pd]

end

to kwadrat :size
	if :size < 30 [stop]
	repeat 1 [fd :size rt 90]
	kwadrat :size*0.95
end

to potega :n
	ifelse :n=0 [output 1] [output 2*potega :n-1]
end

to rtree :size
	if :size < 5 [stop]
	fd :size
	
	lt 30 rtree :size*(((random 5)+5)/10)
	rt 60 rtree :size*(((random 5)+5)/10)
	lt 30 bk :size
end

to silnia :n
	ifelse :n=0 [output 1] [output :n*silnia :n-1]
end

to tree :size
	if :size < 5 [stop]
	fd :size
	
	lt 30 tree :size*0.90
	rt 60 tree :size*0.90
	lt 30 bk :size
end

to wielokatlh :size :start :max
	if :start > :max [stop]
	repeat :start [fd :size rt 360/:start]
	wielokatlh :size :start+1 :max

end

to potegan :n
	if (:n = 0) [output 1]
	if (:n > 0) [output 2*potegan :n-1]
	if (:n < 0) [output 0.5*potegan :n+1]
end
to liczbadon :m :n
	if (:n = 0) [output 1]
	if (:n > 0) [output :m*liczbadon :m :n-1]
	if (:n < 0) [output 1/:m*liczbadon :m :n+1]
end
